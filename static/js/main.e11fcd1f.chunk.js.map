{"version":3,"sources":["Footer.js","socket/SocketFail.js","treestructure/icons.js","treestructure/Tree.js","treestructure/utils.js","treestructure/TreeLayout.js","reducers/socketReducer.js","sagas/socketSaga.js","constants/serverEvents.js","viewers/ImageViewer.js","socket/SocketStatus.js","App.js","reducers/rootReducer.js","sagas/rootSaga.js","index.js"],"names":["Footer","url","mail","style","width","className","color","paddingLeft","marginBottom","fontSize","href","target","Nav","Item","Link","reload","window","location","SocketFail","Alert","variant","Button","size","onClick","MinusSquareO","props","viewBox","d","PlusSquareO","CloseSquareO","Frame","styled","Title","Content","a","div","toggle","height","marginRight","cursor","verticalAlign","Tree","memo","data","level","name","nodes","shape","xtra","useState","open","isOpen","setOpen","previous","value","ref","useRef","useEffect","current","usePrevious","setWidth","setHeight","ro","useMemo","ResizeObserver","entries","entry","contentRect","element","observe","unobserve","useDimensions","viewHeight","useSpring","from","opacity","transform","to","Icon","toString","children","map","node","i","key","TreeLayout","console","log","socketSlice","createSlice","initialState","status","reducers","socketConnected","state","socketClosed","socketReceiveData","action","payload","JSON","parse","socketInvalidEvent","type","error","socketReceiveInput","text","actions","socketReducer","reducer","sendEvent","watchClient","watchServer","watchSocket","send_event","createAction","initWebSocket","socket","eventChannel","emit","onopen","send","stringify","client","onmessage","event","msg","onclose","END","onerror","err","Error","reason","close","all","takeLatest","socketChannel","take","put","WebSocket","call","fork","serverEvents","mapDispatch","ImageViewer","connect","SocketStatus","Container","fluid","Row","Col","sm","rootReducer","combineReducers","rootSaga","sagaMiddleware","createSagaMiddleWare","middleware","getDefaultMiddleware","thunk","store","configureStore","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e11fcd1f.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nexport const Footer = ({ url }) => {\n  const mail = 'renato.hermoza@pucp.edu.pe';\n  const social = 'renato145';\n\n  return (\n    <footer style={{ width: '100%' }} className=\"mt-5\">\n      <p style={{ color: '#6c757d', paddingLeft: '1rem', marginBottom: '0rem', fontSize: '0.9rem' }}>\n        Made by: Renato Hermoza, check the{' '}\n        <a href={`https://github.com/renato145/${url}`} target=\"_black\">\n          source code\n        </a>\n        .\n      </p>\n      <hr className=\"mt-2\" />\n      <Nav className=\"justify-content-center\">\n        <Nav.Item>\n          <Nav.Link href={`mailto:${mail}`}>{mail}</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link href={`https://twitter.com/${social}`} target=\"_black\">\n            Twitter\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link href={`https://github.com/${social}`} target=\"_black\">\n            GitHub\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link href={`https://${social}.github.io`} target=\"_black\">\n            Blog\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </footer>\n  );\n};\n","import React from 'react';\nimport { Alert, Button } from 'react-bootstrap';\n\nconst reload = () => window.location.reload(false);\n\nexport const SocketFail = () => {\n  return (\n    <>\n      <Alert variant=\"info\">\n        <p>\n          This utility is helps you visualize information about{' '}\n          <a href=\"https://dev.fast.ai/\">fastai2</a> models. To use this, you\n          need to launch the server in python via{' '}\n          <a href=\"https://renato145.github.io/fastexplorer/\">fastexplorer</a>.\n        </p>\n        <p>\n          Once you launch the server,{' '}\n          <Button variant=\"info\" size=\"sm\" onClick={reload}>\n            refresh\n          </Button>\n          {' '}this page.\n        </p>\n      </Alert>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const MinusSquareO = (props) => (\n  <svg {...props} viewBox=\"64 -65 897 897\">\n    <g>\n      <path\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 347h-442q-14 0 -25 10.5t-11 25.5v0q0 15 11 25.5t25 10.5h442q14 0 25 -10.5t11 -25.5v0\n  q0 -15 -11 -25.5t-25 -10.5z\"\n      />\n    </g>\n  </svg>\n);\n\nexport const PlusSquareO = (props) => (\n  <svg {...props} viewBox=\"64 -65 897 897\">\n    <g>\n      <path\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 420h-184v183q0 15 -10.5 25.5t-25.5 10.5v0q-14 0 -25 -10.5t-11 -25.5v-183h-184\n  q-15 0 -25.5 -11t-10.5 -25v0q0 -15 10.5 -25.5t25.5 -10.5h184v-183q0 -15 11 -25.5t25 -10.5v0q15 0 25.5 10.5t10.5 25.5v183h184q15 0 25.5 10.5t10.5 25.5v0q0 14 -10.5 25t-25.5 11z\"\n      />\n    </g>\n  </svg>\n);\n\nexport const CloseSquareO = (props) => (\n  <svg {...props} viewBox=\"64 -65 897 897\">\n    <g>\n      <path\n        d=\"M717.5 589.5q-10.5 10.5 -25.5 10.5t-26 -10l-154 -155l-154 155q-11 10 -26 10t-25.5 -10.5t-10.5 -25.5t11 -25l154 -155l-154 -155q-11 -10 -11 -25t10.5 -25.5t25.5 -10.5t26 10l154 155l154 -155q11 -10 26 -10t25.5 10.5t10.5 25t-11 25.5l-154 155l154 155\n  q11 10 11 25t-10.5 25.5zM888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0z\"\n      />\n    </g>\n  </svg>\n);\n","import React, { memo, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSpring, a } from 'react-spring';\nimport { usePrevious, useDimensions } from './utils';\nimport { MinusSquareO, PlusSquareO, CloseSquareO } from './icons';\n\nconst Frame = styled('div')`\n  position: relative;\n  padding: 4px 0px 0px 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow-x: hidden;\n  vertical-align: middle;\n`;\n\nconst Title = styled('span')`\n  vertical-align: middle;\n`;\n\nconst Content = styled(a.div)`\n  margin-left: 6px;\n  padding: 0px 0px 0px 14px;\n  border-left: 2px dashed rgba(0, 0, 0, 0.25);\n  overflow: hidden;\n`;\n\nconst toggle = {\n  width: '1em',\n  height: '1em',\n  marginRight: 10,\n  cursor: 'pointer',\n  verticalAlign: 'middle',\n};\n\nexport const Tree = memo(({ data, level }) => {\n  const { name, nodes } = data;\n  const shape = data?.xtra?.shape;\n  const [isOpen, setOpen] = useState(data?.xtra?.open);\n  const previous = usePrevious(isOpen);\n  const { ref, height: viewHeight } = useDimensions();\n  const { height, opacity, transform } = useSpring({\n    from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`,\n    },\n  });\n  const Icon = nodes ? (isOpen ? MinusSquareO : PlusSquareO) : CloseSquareO;\n\n  return (\n    <Frame>\n      <Icon\n        style={{ ...toggle, opacity: nodes ? 1 : 0.3 }}\n        onClick={() => setOpen(!isOpen)}\n      />\n      <Title>\n        {name}\n        {shape ? ` [${shape.toString()}]` : ''}\n      </Title>\n      <Content\n        style={{\n          opacity,\n          height: isOpen && previous === isOpen ? 'auto' : height,\n        }}\n      >\n        <a.div\n          ref={ref}\n          style={{ transform }}\n          children={\n            nodes &&\n            nodes.map((node, i) => (\n              <Tree key={i} data={node} level={level + 1} />\n            ))\n          }\n        />\n      </Content>\n    </Frame>\n  );\n});\n","import { useRef, useEffect, useState, useMemo } from 'react';\nimport { ResizeObserver } from '@juggle/resize-observer';\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n\nexport const useDimensions = () => {\n  const ref = useRef();\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  const ro = useMemo(\n    () =>\n      new ResizeObserver((entries) => {\n        const entry = entries[0];\n        setWidth(entry.contentRect.width);\n        setHeight(entry.contentRect.height);\n      }),\n    []\n  );\n\n  useEffect(() => {\n    const element = ref.current;\n    if (element) ro.observe(element);\n    return () => ro.unobserve(element);\n  }, [ro]);\n\n  return { ref, width, height };\n};\n\n// export function useMeasure() {\n//   const ref = useRef()\n//   const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 })\n//   const [ro] = useState(() => new ResizeObserver(([entry]) => set(entry.contentRect)))\n//   useEffect(() => {\n//     if (ref.current) ro.observe(ref.current)\n//     return () => ro.disconnect()\n//   }, [])\n//   return [{ ref }, bounds]\n// }\n","import React from 'react';\nimport { Tree } from './Tree';\n\nexport const TreeLayout = ({ data }) => {\n  console.log(data);\n\n  return <Tree data={data} level={0} />;\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst socketSlice = createSlice({\n  name: 'socket',\n  initialState: {\n    status: 'waiting',\n    data: null,\n  },\n  reducers: {\n    socketConnected(state) {\n      state.status = 'connected';\n    },\n    socketClosed(state) {\n      state.status = 'closed';\n    },\n    socketReceiveData(state, action) {\n      const { data } = action.payload;\n      state.data = JSON.parse(data);\n    },\n    socketInvalidEvent(state, action) {\n      const { type } = action.payload;\n      console.error('Type not recognized by server:', type);\n    },\n    socketReceiveInput(state, action) {\n      const { text }  = action.payload;\n      console.log(text);\n    }\n  },\n});\n\nexport const {\n  socketConnected,\n  socketClosed,\n  socketReceiveData,\n} = socketSlice.actions;\nexport const socketReducer = socketSlice.reducer;\n","import { eventChannel, END } from 'redux-saga';\nimport {\n  all,\n  call,\n  take,\n  put,\n  takeLatest,\n  fork,\n} from 'redux-saga/effects';\nimport {\n  socketConnected,\n  socketClosed,\n} from '../reducers/socketReducer';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst uri = 'ws://localhost:8000/ws';\n\nexport const send_event = createAction('socket/sendEvent', payload => ({payload: {'event': payload}}));\n\nfunction initWebSocket(socket) {\n  return eventChannel((emit) => {\n    socket.onopen = () => {\n      emit(socketConnected());\n      console.log('WebSocket connected.');\n      socket.send(JSON.stringify({type:'CONNECTED' , payload: {client: 'web_client' }}));\n    };\n\n    socket.onmessage = (event) => {\n      const msg = JSON.parse(event.data);\n      if (!msg.type) console.error('Invalid message from socket server', msg)\n      else emit(msg);\n      // console.log(msg.event)\n      // switch (msg.event) {\n      //   case 'close':\n      //     // closeMessage = ` (${msg.msg}).`;\n      //     break;\n      //   case 'invalid_event':\n      //     console.log(`Event not accepted by server: ${msg.msg}.`);\n      //     break;\n      //   default:\n      //     console.log(`Invalid event: ${msg.event}.`);\n      // }\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket closed.');\n      emit(socketClosed());\n      emit(END);\n    };\n\n    socket.onerror = (err) => {\n      emit(new Error(err.reason));\n    };\n\n    return () => socket.close();\n  });\n}\n\nfunction* sendEvent(socket, action) {\n  yield socket.send(JSON.stringify(action));\n}\n\nfunction* watchClient(socket) {\n  yield all([\n    takeLatest(send_event, sendEvent, socket),\n  ]);\n}\n\nfunction* watchServer(socketChannel) {\n  while (true) {\n    try {\n      const payload = yield take(socketChannel);\n      yield put(payload);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n}\n\nexport function* watchSocket() {\n  const socket = new WebSocket(uri);\n  const socketChannel = yield call(initWebSocket, socket);\n  yield fork(watchClient, socket);\n  yield fork(watchServer, socketChannel);\n}\n","export const serverEvents = {\n  LOAD_INPUT: 'LOAD_INPUT'\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { send_event } from '../sagas/socketSaga';\nimport { serverEvents } from '../constants/serverEvents';\n\nconst mapDispatch = { send_event };\n\nexport const ImageViewerComponent = ({ send_event }) => {\n  return (\n    <div>\n      <Button onClick={() => send_event(serverEvents.LOAD_INPUT)}>Load Input</Button>\n    </div>\n  );\n};\n\nexport const ImageViewer = connect(null, mapDispatch)(ImageViewerComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SocketStatusComponent = ({ status }) => {\n  return (\n    <div>\n      <p>Socket status: {status}</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.socket.status\n  };\n};\n\nexport const SocketStatus = connect(mapStateToProps, null)(SocketStatusComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Footer } from './Footer';\nimport { SocketFail } from './socket/SocketFail';\nimport { TreeLayout } from './treestructure/TreeLayout';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { ImageViewer } from './viewers/ImageViewer';\nimport { SocketStatus } from './socket/SocketStatus';\n\nconst App = ({data}) => {\n  return (\n    <Container className=\"app-container\" fluid=\"xl\">\n      <header>\n        <h1 className=\"mt-4 mb-4\">Fast Explorer</h1>\n      </header>\n\n      <main>\n        <Row>\n          <Col>\n            <SocketStatus />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          {data ? (\n            <>\n              <Col sm=\"auto\">\n                <TreeLayout data={data} />\n              </Col>\n              <Col>\n                <ImageViewer />\n              </Col>\n            </>\n          ) : (\n            <SocketFail />\n          )}\n        </Row>\n      </main>\n\n      <Footer url=\"fastexplorer-js\" />\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.socket.data\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { socketReducer } from './socketReducer';\n\nexport const rootReducer = combineReducers({ socket: socketReducer });","import { all, fork } from 'redux-saga/effects';\nimport { watchSocket } from './socketSaga';\n\nexport function* rootSaga() {\n  yield fork(watchSocket)\n  yield all([\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleWare from 'redux-saga';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './reducers/rootReducer';\nimport { rootSaga } from './sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleWare();\nconst middleware = [...getDefaultMiddleware({thunk: false}), sagaMiddleware];\nconst store = configureStore({ reducer: rootReducer, middleware});\nsagaMiddleware.run(rootSaga);\n\n// const store = configureStore({ reducer: rootReducer });\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider> ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}