{"version":3,"sources":["Footer.js","socket/SocketFail.js","treestructure/icons.js","treestructure/Tree.js","treestructure/utils.js","treestructure/TreeLayout.js","reducers/socketReducer.js","helpers/numpyReader.js","sagas/socketSaga.js","constants/serverEvents.js","viewers/ImageViewer.js","socket/SocketStatus.js","App.js","reducers/rootReducer.js","sagas/rootSaga.js","index.js"],"names":["Footer","url","mail","style","width","className","color","paddingLeft","marginBottom","fontSize","href","target","Nav","Item","Link","reload","window","location","SocketFail","Alert","variant","Button","size","onClick","MinusSquareO","props","viewBox","d","PlusSquareO","CloseSquareO","Frame","styled","Title","Content","a","div","toggle","height","marginRight","cursor","verticalAlign","Tree","memo","data","level","name","nodes","shape","xtra","useState","open","isOpen","setOpen","previous","value","ref","useRef","useEffect","current","usePrevious","setWidth","setHeight","ro","useMemo","ResizeObserver","entries","entry","contentRect","element","observe","unobserve","useDimensions","viewHeight","useSpring","from","opacity","transform","to","Icon","toString","children","map","node","i","key","TreeLayout","console","log","socketSlice","createSlice","initialState","status","inputImage","reducers","socketConnected","state","socketClosed","socketReceiveData","action","payload","JSON","parse","socketInvalidEvent","type","error","socketReceiveImageInput","socketServerClosed","msg","actions","socketReducer","reducer","dtypes","arrayConstructor","Uint8Array","Int8Array","Int32Array","Float32Array","Float64Array","npyToUrl","blob","arrayBuffer","buffer","headerLength","DataView","slice","getUint8","offsetBytes","hcontents","TextDecoder","decode","header","replace","descr","dataUrl","URL","createObjectURL","urlToArray","fetch","response","sendEvent","watchClient","watchServer","watchSocket","send_event","createAction","event","initWebSocket","socket","eventChannel","emit","onopen","send","stringify","client","onmessage","onclose","END","onerror","err","Error","reason","close","all","takeLatest","socketChannel","take","put","WebSocket","call","fork","serverEvents","mapDispatch","ImageViewer","connect","then","canvas","ctx","getContext","imageData","getImageData","length","idx","colorValue","putImageData","maxWidth","background","SocketStatus","Container","fluid","Row","Col","sm","rootReducer","combineReducers","rootSaga","sagaMiddleware","createSagaMiddleWare","middleware","getDefaultMiddleware","thunk","store","configureStore","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e71e8d7b.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nexport const Footer = ({ url }) => {\n  const mail = 'renato.hermoza@pucp.edu.pe';\n  const social = 'renato145';\n\n  return (\n    <footer style={{ width: '100%' }} className=\"mt-5\">\n      <p style={{ color: '#6c757d', paddingLeft: '1rem', marginBottom: '0rem', fontSize: '0.9rem' }}>\n        Made by: Renato Hermoza, check the{' '}\n        <a href={`https://github.com/renato145/${url}`} target=\"_black\">\n          source code\n        </a>\n        .\n      </p>\n      <hr className=\"mt-2\" />\n      <Nav className=\"justify-content-center\">\n        <Nav.Item>\n          <Nav.Link href={`mailto:${mail}`}>{mail}</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link href={`https://twitter.com/${social}`} target=\"_black\">\n            Twitter\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link href={`https://github.com/${social}`} target=\"_black\">\n            GitHub\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link href={`https://${social}.github.io`} target=\"_black\">\n            Blog\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </footer>\n  );\n};\n","import React from 'react';\nimport { Alert, Button } from 'react-bootstrap';\n\nconst reload = () => window.location.reload(false);\n\nexport const SocketFail = () => {\n  return (\n    <>\n      <Alert variant=\"info\">\n        <p>\n          This utility is helps you visualize information about{' '}\n          <a href=\"https://dev.fast.ai/\">fastai2</a> models. To use this, you\n          need to launch the server in python via{' '}\n          <a href=\"https://renato145.github.io/fastexplorer/\">fastexplorer</a>.\n        </p>\n        <p>\n          Once you launch the server,{' '}\n          <Button variant=\"info\" size=\"sm\" onClick={reload}>\n            refresh\n          </Button>\n          {' '}this page.\n        </p>\n      </Alert>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const MinusSquareO = (props) => (\n  <svg {...props} viewBox=\"64 -65 897 897\">\n    <g>\n      <path\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 347h-442q-14 0 -25 10.5t-11 25.5v0q0 15 11 25.5t25 10.5h442q14 0 25 -10.5t11 -25.5v0\n  q0 -15 -11 -25.5t-25 -10.5z\"\n      />\n    </g>\n  </svg>\n);\n\nexport const PlusSquareO = (props) => (\n  <svg {...props} viewBox=\"64 -65 897 897\">\n    <g>\n      <path\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 420h-184v183q0 15 -10.5 25.5t-25.5 10.5v0q-14 0 -25 -10.5t-11 -25.5v-183h-184\n  q-15 0 -25.5 -11t-10.5 -25v0q0 -15 10.5 -25.5t25.5 -10.5h184v-183q0 -15 11 -25.5t25 -10.5v0q15 0 25.5 10.5t10.5 25.5v183h184q15 0 25.5 10.5t10.5 25.5v0q0 14 -10.5 25t-25.5 11z\"\n      />\n    </g>\n  </svg>\n);\n\nexport const CloseSquareO = (props) => (\n  <svg {...props} viewBox=\"64 -65 897 897\">\n    <g>\n      <path\n        d=\"M717.5 589.5q-10.5 10.5 -25.5 10.5t-26 -10l-154 -155l-154 155q-11 10 -26 10t-25.5 -10.5t-10.5 -25.5t11 -25l154 -155l-154 -155q-11 -10 -11 -25t10.5 -25.5t25.5 -10.5t26 10l154 155l154 -155q11 -10 26 -10t25.5 10.5t10.5 25t-11 25.5l-154 155l154 155\n  q11 10 11 25t-10.5 25.5zM888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0z\"\n      />\n    </g>\n  </svg>\n);\n","import React, { memo, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSpring, a } from 'react-spring';\nimport { usePrevious, useDimensions } from './utils';\nimport { MinusSquareO, PlusSquareO, CloseSquareO } from './icons';\n\nconst Frame = styled('div')`\n  position: relative;\n  padding: 4px 0px 0px 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow-x: hidden;\n  vertical-align: middle;\n`;\n\nconst Title = styled('span')`\n  vertical-align: middle;\n`;\n\nconst Content = styled(a.div)`\n  margin-left: 6px;\n  padding: 0px 0px 0px 14px;\n  border-left: 2px dashed rgba(0, 0, 0, 0.25);\n  overflow: hidden;\n`;\n\nconst toggle = {\n  width: '1em',\n  height: '1em',\n  marginRight: 10,\n  cursor: 'pointer',\n  verticalAlign: 'middle',\n};\n\nexport const Tree = memo(({ data, level }) => {\n  const { name, nodes } = data;\n  const shape = data?.xtra?.shape;\n  const [isOpen, setOpen] = useState(data?.xtra?.open);\n  const previous = usePrevious(isOpen);\n  const { ref, height: viewHeight } = useDimensions();\n  const { height, opacity, transform } = useSpring({\n    from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`,\n    },\n  });\n  const Icon = nodes ? (isOpen ? MinusSquareO : PlusSquareO) : CloseSquareO;\n\n  return (\n    <Frame>\n      <Icon\n        style={{ ...toggle, opacity: nodes ? 1 : 0.3 }}\n        onClick={() => setOpen(!isOpen)}\n      />\n      <Title>\n        {name}\n        {shape ? ` [${shape.toString()}]` : ''}\n      </Title>\n      <Content\n        style={{\n          opacity,\n          height: isOpen && previous === isOpen ? 'auto' : height,\n        }}\n      >\n        <a.div\n          ref={ref}\n          style={{ transform }}\n          children={\n            nodes &&\n            nodes.map((node, i) => (\n              <Tree key={i} data={node} level={level + 1} />\n            ))\n          }\n        />\n      </Content>\n    </Frame>\n  );\n});\n","import { useRef, useEffect, useState, useMemo } from 'react';\nimport { ResizeObserver } from '@juggle/resize-observer';\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n\nexport const useDimensions = () => {\n  const ref = useRef();\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  const ro = useMemo(\n    () =>\n      new ResizeObserver((entries) => {\n        const entry = entries[0];\n        setWidth(entry.contentRect.width);\n        setHeight(entry.contentRect.height);\n      }),\n    []\n  );\n\n  useEffect(() => {\n    const element = ref.current;\n    if (element) ro.observe(element);\n    return () => ro.unobserve(element);\n  }, [ro]);\n\n  return { ref, width, height };\n};\n","import React from 'react';\nimport { Tree } from './Tree';\n\nexport const TreeLayout = ({ data }) => {\n  console.log(data);\n\n  return <Tree data={data} level={0} />;\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst socketSlice = createSlice({\n  name: 'socket',\n  initialState: {\n    status: 'waiting',\n    data: null,\n    inputImage: null,\n  },\n  reducers: {\n    socketConnected(state) {\n      state.status = 'connected';\n    },\n    socketClosed(state) {\n      state.status = 'closed';\n    },\n    socketReceiveData(state, action) {\n      const { data } = action.payload;\n      state.data = JSON.parse(data);\n    },\n    socketInvalidEvent(state, action) {\n      const { type } = action.payload;\n      console.error('Type not recognized by server:', type);\n    },\n    socketReceiveImageInput(state, action) {\n      state.inputImage = action.payload;\n    },\n    socketServerClosed(state, action) {\n      const { msg } = action.payload;\n      console.error(msg);\n    },\n  },\n});\n\nexport const {\n  socketConnected,\n  socketClosed,\n  socketReceiveData,\n} = socketSlice.actions;\nexport const socketReducer = socketSlice.reducer;\n","// Based on https://github.com/aplbrain/npyjs\n\nconst dtypes = {\n  '<u1': {\n    name: 'uint8',\n    size: 8,\n    arrayConstructor: Uint8Array,\n  },\n  '|u1': {\n    name: 'uint8',\n    size: 8,\n    arrayConstructor: Uint8Array,\n  },\n  '|i1': {\n    name: 'int8',\n    size: 8,\n    arrayConstructor: Int8Array,\n  },\n  '<u4': {\n    name: 'uint32',\n    size: 32,\n    arrayConstructor: Int32Array,\n  },\n  '<i4': {\n    name: 'int32',\n    size: 32,\n    arrayConstructor: Int32Array,\n  },\n  //   '<u8': {\n  //     name: 'uint64',\n  //     size: 64,\n  //     arrayConstructor: BigUint64Array,\n  //   },\n  //   '<i8': {\n  //     name: 'int64',\n  //     size: 64,\n  //     arrayConstructor: BigInt64Array,\n  //   },\n  '<f4': {\n    name: 'float32',\n    size: 32,\n    arrayConstructor: Float32Array,\n  },\n  '<f8': {\n    name: 'float64',\n    size: 64,\n    arrayConstructor: Float64Array,\n  },\n};\n\nexport const npyToUrl = async (blob) => {\n  const buffer = await blob.arrayBuffer();\n  const headerLength = new DataView(buffer.slice(8, 10)).getUint8(0);\n  const offsetBytes = 10 + headerLength;\n\n  const hcontents = new TextDecoder('utf-8').decode(\n    new Uint8Array(buffer.slice(10, 10 + headerLength))\n  );\n\n  const header = JSON.parse(\n    hcontents\n      .replace(/'/g, '\"')\n      .replace('False', 'false')\n      .replace('(', '[')\n      .replace(')', ']')\n      .replace(', }', '}')\n    // .replace(/,*\\),*/g, ']')\n  );\n\n  const { shape, descr } = header;\n  const dataUrl = URL.createObjectURL(blob.slice(offsetBytes));\n\n  return {\n    type: header.type,\n    payload: {\n      dataUrl,\n      shape,\n      descr,\n    },\n  };\n};\n\nexport const urlToArray = async ({ dataUrl, shape, descr }) => {\n  const url = new URL(dataUrl);\n  const response = await fetch(url);\n  const buffer = await response.arrayBuffer();\n  return {\n    data: new dtypes[descr]['arrayConstructor'](buffer),\n    shape: shape\n  }\n};\n","import { eventChannel, END } from 'redux-saga';\nimport {\n  all,\n  call,\n  take,\n  put,\n  takeLatest,\n  fork,\n} from 'redux-saga/effects';\nimport { socketConnected, socketClosed } from '../reducers/socketReducer';\nimport { createAction } from '@reduxjs/toolkit';\nimport { npyToUrl } from '../helpers/numpyReader';\n\nconst uri = 'ws://localhost:8000/ws';\n\nexport const send_event = createAction('socket/sendEvent', (payload) => ({\n  payload: { event: payload },\n}));\n\nfunction initWebSocket(socket) {\n  return eventChannel((emit) => {\n    socket.onopen = () => {\n      emit(socketConnected());\n      console.log('WebSocket connected.');\n      socket.send(\n        JSON.stringify({ type: 'CONNECTED', payload: { client: 'web_client' } })\n      );\n    };\n\n    socket.onmessage = async (event) => {\n      const data = event.data;\n      const msg = typeof data === \"string\" ? JSON.parse(data) : await npyToUrl(data);\n      if (!msg.type) console.error('Invalid message from socket server', msg);\n      else {\n        console.log('Event from WebSocket: ', msg.type);\n        emit(msg);\n      }\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket closed.');\n      emit(socketClosed());\n      emit(END);\n    };\n\n    socket.onerror = (err) => {\n      emit(new Error(err.reason));\n    };\n\n    return () => socket.close();\n  });\n}\n\nfunction* sendEvent(socket, action) {\n  yield socket.send(JSON.stringify(action));\n}\n\nfunction* watchClient(socket) {\n  yield all([takeLatest(send_event, sendEvent, socket)]);\n}\n\nfunction* watchServer(socketChannel) {\n  while (true) {\n    try {\n      const payload = yield take(socketChannel);\n      yield put(payload);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n}\n\nexport function* watchSocket() {\n  const socket = yield new WebSocket(uri);\n  const socketChannel = yield call(initWebSocket, socket);\n  yield fork(watchClient, socket);\n  yield fork(watchServer, socketChannel);\n}\n","export const serverEvents = {\n  LOAD_INPUT: 'LOAD_INPUT'\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { send_event } from '../sagas/socketSaga';\nimport { serverEvents } from '../constants/serverEvents';\nimport { urlToArray } from '../helpers/numpyReader';\n\nconst mapDispatch = { send_event };\n\nexport const ImageViewerComponent = ({ inputImage, send_event }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (!inputImage) return;\n    urlToArray(inputImage).then(({data, shape}) => {\n      const canvas = ref.current;\n      const ctx = canvas.getContext('2d');\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const d = imageData.data;\n\n      for (let i = 0; i < d.length/4; i++) {\n        const idx = i*4;\n        // const colorValue = color(interpolateMagma(data[idx]/255));\n        const colorValue = data[i]*255;\n        d[idx] = colorValue;\n        d[idx+1] = colorValue;\n        d[idx+2] = colorValue;\n        d[idx+3] = 255;\n      }\n\n      ctx.putImageData(imageData, 0, 0);\n    });\n  }, [inputImage]);\n\n  return (\n    <div style={{maxWidth: '300px'}}>\n      <Button variant='link' onClick={() => send_event(serverEvents.LOAD_INPUT)}>Load Input</Button>\n      <canvas ref={ref} width={28} height={28} style={{width:'100%', background:'#eee'}} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  inputImage: state.socket.inputImage,\n});\n\nexport const ImageViewer = connect(mapStateToProps, mapDispatch)(ImageViewerComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SocketStatusComponent = ({ status }) => {\n  return (\n    <div>\n      <p>Socket status: {status}</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.socket.status\n  };\n};\n\nexport const SocketStatus = connect(mapStateToProps, null)(SocketStatusComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Footer } from './Footer';\nimport { SocketFail } from './socket/SocketFail';\nimport { TreeLayout } from './treestructure/TreeLayout';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { ImageViewer } from './viewers/ImageViewer';\nimport { SocketStatus } from './socket/SocketStatus';\n\nconst App = ({data}) => {\n  return (\n    <Container className=\"app-container\" fluid=\"xl\">\n      <header>\n        <h1 className=\"mt-4 mb-4\">Fast Explorer</h1>\n      </header>\n\n      <main>\n        <Row>\n          <Col>\n            <SocketStatus />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          {data ? (\n            <>\n              <Col sm=\"auto\">\n                <TreeLayout data={data} />\n              </Col>\n              <Col>\n                <ImageViewer />\n              </Col>\n            </>\n          ) : (\n            <SocketFail />\n          )}\n        </Row>\n      </main>\n\n      <Footer url=\"fastexplorer-js\" />\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.socket.data\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { socketReducer } from './socketReducer';\n\nexport const rootReducer = combineReducers({ socket: socketReducer });","import { all, fork } from 'redux-saga/effects';\nimport { watchSocket } from './socketSaga';\n\nexport function* rootSaga() {\n  yield fork(watchSocket)\n  yield all([\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleWare from 'redux-saga';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './reducers/rootReducer';\nimport { rootSaga } from './sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleWare();\nconst middleware = [...getDefaultMiddleware({thunk: false}), sagaMiddleware];\nconst store = configureStore({ reducer: rootReducer, middleware});\nsagaMiddleware.run(rootSaga);\n\n// const store = configureStore({ reducer: rootReducer });\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider> ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}